
from enum import Enum
from typing import Callable, Optional, TypedDict

from .constants import DEFAULT_TOKEN_USAGE

def increase_token_usage(
    token_usage: Optional[dict] = None,
    incremental: dict = {**DEFAULT_TOKEN_USAGE},
):
    if token_usage is None:
        token_usage = {**DEFAULT_TOKEN_USAGE}
    token_usage["total_tokens"] += incremental["total_tokens"]
    token_usage["completion_tokens"] += incremental["completion_tokens"]
    token_usage["prompt_tokens"] += incremental["prompt_tokens"]

    return token_usage

class ResearchGoalEnum(Enum):
    ALZHEIMERS = "alzheimer"
    SPATIAL = "spatial alzheimer"

RESEARCH_GOAL_DICT = {
    ResearchGoalEnum.ALZHEIMERS: "**Alzheimer's disease** and **single-cell RNA sequencing**",
    ResearchGoalEnum.SPATIAL: "**Alzheimer's disease** and **spatial transcriptomics**",
}

IMPORTANT_INSTRUCTIONS_DICT = {
    ResearchGoalEnum.ALZHEIMERS: (
        "1. To further determine if the data in the paper is original scRNA-seq data generated by author and publicly accessible, you can follow these steps:\n"
        "   - Check the **Methods** section for terms like \"Single-Cell RNA sequencing\", \"scRNA-seq\", \"Single-nucleus RNA sequencing\", \"snRNA-seq\", \"Illumina\", \"Drop-seq\", \"Library\" or specific platform (e.g., 10X Genomics).\n"
        "   - See if there's a **Data Availability** section listing GSE/GEO ID, Synapse ID (syn) or a direct download link.\n"
        "   - If there is no **Methods** section or **Data Availability** section, please carefully analyze full text and **Supplementary Materials** to determine if the data is original and publicly accessible.\n"
        "2. Moreover, the data related to the targeted disease: AD is the focus of the study, not just referenced in the introduction.\n"
    ),
    ResearchGoalEnum.SPATIAL: "N/A",
}

class IdentifyState(TypedDict):
    research_goal: ResearchGoalEnum
    title: str
    abstract: str
    content: str
    step_output_callback: Optional[Callable[[str], None]]  # Callback for step output
    identify_instructions: Optional[str]

    # final answer
    relevant: Optional[bool]
    original: Optional[bool]

    
